#!/bin/bash

# Retrieve arguments
domain=$1
path=$2
data_dir=$3
passw=$4
current_dir=${PWD}
debian_version=$(lsb_release -c -s)

# Source app helpers
source /usr/share/yunohost/helpers

# Check domain/path availability
#yunohost app checkurl $domain$path -a rutorrent
ynh_webpath_available --domain=$domain --path_url=$path
if [[ ! $? -eq 0 ]]; then
  echo "Error: domain/path not available"
  exit 1
else
  ynh_webpath_register --app="rutorrent" --domain=$domain --path_url=$path
fi

if [ "$debian_version" = "buster" ]; then
  cd /tmp
    
#  apt install -y apt-transport-https gnupg2
  ynh_package_install apt-transport-https gnupg2
  ynh_install_extra_app_dependencies --repo="deb http://ftp2.fr.debian.org/debian/ buster main non-free" --package="rar unrar"
#  echo "#Depot sury-php
#deb https://packages.sury.org/php/bu ster main" >> /etc/apt/sources.list.d/sury-php.list
#ynh_install_extra_app_dependencies --repo="https://packages.sury.org/php/bu ster main" --key="https://packages.sury.org/php/apt.gpg" --package="


#  echo "#Depot paquets proprietaires
#deb http://ftp2.fr.debian.org/debian/ buster main non-free
#deb-src http://ftp2.fr.debian.org/debian/ buster main non-free" >> /etc/apt/sources.list.d/non-free.list

#  echo "#Depot multimedia
#deb http://www.deb-multimedia.org buster main non-free" >> /etc/apt/sources.list.d/multimedia.list
#ynh_install_extra_app_dependencies --repo="deb http://www.deb-multimedia.org buster main non-free" --package="ffmpeg"


#  echo "#Depot mediainfo
#deb http://mediaarea.net/repo/deb/debian/ buster main" >> /etc/apt/sources.list.d/mediainfo.list
ynh_install_extra_app_dependencies --repo="deb http://mediaarea.net/repo/deb/debian/ buster main" --key="http://mediaarea.net/repo/deb/debian/pubkey.gpg" --package="mediainfo"


#  wget https://packages.sury.org/php/apt.gpg -O sury.gpg 2>&1 && apt-key add sury.gpg

#  wget http://mediaarea.net/repo/deb/debian/pubkey.gpg -O mediainfo.gpg 2>&1 && apt-key add mediainfo.gpg

fi

# Install dependencies
#apt-get update -oAcquire::AllowInsecureRepositories=true
#apt install -y --allow-unauthenticated deb-multimedia-keyring
#apt update

#apt install -y \
ynh_package_install \
  apache2-utils \
  automake \
  htop \
  build-essential \
  curl \
  gawk \
  git \
  libcppunit-dev \
  libcurl4-openssl-dev \
  libncurses5-dev \
  libsigc++-2.0-dev \
  libsox-fmt-all \
  libsox-fmt-mp3 \
  libssl-dev \
  libtool \
  mktorrent \
  net-tools \
  nginx \
  php7.3 \
  php7.3-cli \
  php7.3-common \
  php7.3-curl \
  php7.3-fpm \
  php7.3-json \
  php7.3-mbstring \
  php7.3-opcache \
  php7.3-readline \
  php7.3-xml \
  php-geoip \
  pkg-config \
  psmisc \
  python-pip \
  rar \
  screen \
  subversion \
  unrar \
  unzip \
  sox \
  vim \
  zip \
  zlib1g-dev

# Build xmlrpc
cd /tmp
git clone https://github.com/mirror/xmlrpc-c.git
cd xmlrpc-c/stable/
./configure
make
make install

# Build libtorrent
cd /tmp
git clone https://github.com/rakshasa/libtorrent.git
cd libtorrent
git checkout v0.13.8
./autogen.sh
./configure --disable-debug
make
make install

# Build rtorrent
cd /tmp
git clone https://github.com/rakshasa/rtorrent.git
cd rtorrent
git checkout 0.9.8
./autogen.sh
./configure --with-xmlrpc-c --with-ncurses --disable-debug
make
make install

ldconfig

# Install rutorrent
git clone https://github.com/Novik/ruTorrent.git /var/www/rutorrent

# Installation cloudscraper pour plugin _cloudflare
pip install cloudscraper

# Installation du plugin ruTorrent ratiocolor
cd /var/www/rutorrent/plugins/
git clone https://github.com/Micdu70/rutorrent-ratiocolor.git ratiocolor

# Installation du plugin ruTorrent Logoff
cd /var/www/rutorrent/plugins/
wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/rutorrent-logoff/logoff-1.3.tar.gz 2>&1
tar xzfv  logoff-1.3.tar.gz
rm logoff-1.3.tar.gz

# Installation du plugin GeoIP2
cd /var/www/rutorrent/plugins/
git clone https://github.com/Micdu70/geoip2-rutorrent.git geoip2

# Installation du plugin ruTorrent pausewebui
cd /var/www/rutorrent/plugins/
wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/rutorrent-pausewebui/pausewebui.1.2.zip 2>&1
unzip pausewebui.1.2.zip
ynh_secure_remove --file=__MACOSX pausewebui.1.2.zip

# Installation du plugin ruTorrent pausewebui
cd /tmp
git clone https://github.com/Micdu70/rutorrent-thirdparty-plugins.git
cd rutorrent-thirdparty-plugins
mv filemanager /var/www/rutorrent/plugins/filemanager

# Changement de propriÃ©taire des fichiers web
chown -R www-data:www-data /var/www/rutorrent


# Configure plugins
cd $current_dir

rm /var/www/rutorrent/plugins/create/conf.php
cp ../sources/plugins/create/conf.php /var/www/rutorrent/plugins/create/conf.php

rm /var/www/rutorrent/plugins/filemanager/conf.php
cp ../sources/plugins/filemanager/conf.php /var/www/rutorrent/plugins/filemanager/conf.php

# Configure nginx
sed -i "s@PATHTOCHANGE@$path@g" ../sources/nginx/rutorrent.conf
cp ../sources/nginx/rutorrent.conf /etc/nginx/conf.d/$domain.d/rutorrent.conf

# Create data dir
mkdir $data_dir
mkdir $data_dir/watch
mkdir $data_dir/downloads
mkdir $data_dir/.session

# Create rtorrent user
useradd -p $(openssl passwd -1 $passw) -m rtorrent

# Add rtorrent config
sed -i "s@DATA_DIR@$data_dir@g" ../sources/rtorrent/rtorrent.rc
cp ../sources/rtorrent/rtorrent.rc /home/rtorrent/.rtorrent.rc
chown -R rtorrent:www-data /home/rtorrent/.rtorrent.rc

chown -R rtorrent:www-data $data_dir
chmod 755 $data_dir

# Configure rutorrent
sed -i "s@DATA_DIR@$data_dir@g" ../sources/rutorrent/config.php
cp ../sources/rutorrent/config.php /var/www/rutorrent/conf/config.php
chown -R www-data:www-data /var/www/rutorrent

# Check port availability
#yunohost app checkport 45069
ynh_port_available --port="45069"
if [[ ! $? -eq 0 ]]; then
  exit 1
fi

# Open port in firewall
yunohost firewall allow TCP 45069 > /dev/null 2>&1

# Launch rtorrent on boot
cp ../sources/init/rtorrent /etc/init.d/rtorrent
chmod +x /etc/init.d/rtorrent
update-rc.d rtorrent defaults

# Start rtorrent
service rtorrent start
yunohost app ssowatconf
service nginx reload

# Save config
#yunohost app setting rutorrent data_dir -v $data_dir
#yunohost app setting rutorrent path -v $path
ynh_app_setting_set --app="rutorrent" --key="data_dir" --value=$data_dir
ynh_app_setting_set --app="rutorrent" --key="path" --value=$path



# Register the service on yunohost
yunohost service add rtorrent
